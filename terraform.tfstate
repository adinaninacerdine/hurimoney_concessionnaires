{
  "version": 4,
  "terraform_version": "1.12.2",
  "serial": 50,
  "lineage": "79ca8d21-5a0b-6d47-7889-18f46e1d392f",
  "outputs": {
    "odoo_url": {
      "value": "http://13.51.48.109:8069",
      "type": "string"
    },
    "odoo_web_server_ip": {
      "value": "13.51.48.109",
      "type": "string"
    },
    "rds_address": {
      "value": "odoo-postgresql-v2.cna66scsaclz.eu-north-1.rds.amazonaws.com",
      "type": "string"
    },
    "rds_connection_string": {
      "value": "postgresql://odoo:OdooPassword2024@odoo-postgresql-v2.cna66scsaclz.eu-north-1.rds.amazonaws.com:5432/odoo",
      "type": "string",
      "sensitive": true
    },
    "rds_endpoint": {
      "value": "odoo-postgresql-v2.cna66scsaclz.eu-north-1.rds.amazonaws.com:5432",
      "type": "string"
    },
    "rds_port": {
      "value": 5432,
      "type": "number"
    },
    "ssh_command": {
      "value": "ssh -i ~/.ssh/hurimoney-key.pem ubuntu@13.51.48.109",
      "type": "string"
    },
    "webhook_url": {
      "value": "http://13.51.48.109:9000/deploy",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "aws_ami",
      "name": "ubuntu",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allow_unsafe_filter": null,
            "architecture": "x86_64",
            "arn": "arn:aws:ec2:eu-north-1::image/ami-03b371d239dfe4af4",
            "block_device_mappings": [
              {
                "device_name": "/dev/sda1",
                "ebs": {
                  "delete_on_termination": "true",
                  "encrypted": "false",
                  "iops": "0",
                  "snapshot_id": "snap-05cfc6cdf88c0f45c",
                  "throughput": "0",
                  "volume_initialization_rate": "0",
                  "volume_size": "8",
                  "volume_type": "gp2"
                },
                "no_device": "",
                "virtual_name": ""
              },
              {
                "device_name": "/dev/sdb",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral0"
              },
              {
                "device_name": "/dev/sdc",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral1"
              }
            ],
            "boot_mode": "uefi-preferred",
            "creation_date": "2025-06-27T06:44:45.000Z",
            "deprecation_time": "2027-06-27T06:44:45.000Z",
            "description": "Canonical, Ubuntu, 22.04, amd64 jammy image",
            "ena_support": true,
            "executable_users": null,
            "filter": [
              {
                "name": "name",
                "values": [
                  "ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-*"
                ]
              },
              {
                "name": "virtualization-type",
                "values": [
                  "hvm"
                ]
              }
            ],
            "hypervisor": "xen",
            "id": "ami-03b371d239dfe4af4",
            "image_id": "ami-03b371d239dfe4af4",
            "image_location": "amazon/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20250627",
            "image_owner_alias": "amazon",
            "image_type": "machine",
            "imds_support": "",
            "include_deprecated": false,
            "kernel_id": "",
            "last_launched_time": "",
            "most_recent": true,
            "name": "ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20250627",
            "name_regex": null,
            "owner_id": "099720109477",
            "owners": [
              "099720109477"
            ],
            "platform": "",
            "platform_details": "Linux/UNIX",
            "product_codes": [],
            "public": true,
            "ramdisk_id": "",
            "region": "eu-north-1",
            "root_device_name": "/dev/sda1",
            "root_device_type": "ebs",
            "root_snapshot_id": "snap-05cfc6cdf88c0f45c",
            "sriov_net_support": "simple",
            "state": "available",
            "state_reason": {
              "code": "UNSET",
              "message": "UNSET"
            },
            "tags": {},
            "timeouts": null,
            "tpm_support": "",
            "uefi_data": null,
            "usage_operation": "RunInstances",
            "virtualization_type": "hvm"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_subnets",
      "name": "default",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filter": [
              {
                "name": "vpc-id",
                "values": [
                  "vpc-0be745570590b0710"
                ]
              }
            ],
            "id": "eu-north-1",
            "ids": [
              "subnet-0070c63743fe10d8c",
              "subnet-06e044cbd63de784d",
              "subnet-09fb960f8242184e5"
            ],
            "region": "eu-north-1",
            "tags": null,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_vpc",
      "name": "default",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:eu-north-1:789121567310:vpc/vpc-0be745570590b0710",
            "cidr_block": "172.31.0.0/16",
            "cidr_block_associations": [
              {
                "association_id": "vpc-cidr-assoc-087a4b1952b15b9b7",
                "cidr_block": "172.31.0.0/16",
                "state": "associated"
              }
            ],
            "default": true,
            "dhcp_options_id": "dopt-019689d4d69d965a8",
            "enable_dns_hostnames": true,
            "enable_dns_support": true,
            "enable_network_address_usage_metrics": false,
            "filter": null,
            "id": "vpc-0be745570590b0710",
            "instance_tenancy": "default",
            "ipv6_association_id": "",
            "ipv6_cidr_block": "",
            "main_route_table_id": "rtb-0a6bcd85baa96eed9",
            "owner_id": "789121567310",
            "region": "eu-north-1",
            "state": null,
            "tags": {},
            "timeouts": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_db_instance",
      "name": "odoo_db",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "address": "odoo-postgresql-v2.cna66scsaclz.eu-north-1.rds.amazonaws.com",
            "allocated_storage": 20,
            "allow_major_version_upgrade": null,
            "apply_immediately": false,
            "arn": "arn:aws:rds:eu-north-1:789121567310:db:odoo-postgresql-v2",
            "auto_minor_version_upgrade": true,
            "availability_zone": "eu-north-1a",
            "backup_retention_period": 7,
            "backup_target": "region",
            "backup_window": "03:00-04:00",
            "blue_green_update": [],
            "ca_cert_identifier": "rds-ca-rsa2048-g1",
            "character_set_name": "",
            "copy_tags_to_snapshot": false,
            "custom_iam_instance_profile": "",
            "customer_owned_ip_enabled": false,
            "database_insights_mode": "standard",
            "db_name": "odoo",
            "db_subnet_group_name": "odoo-db-subnet-group",
            "dedicated_log_volume": false,
            "delete_automated_backups": true,
            "deletion_protection": false,
            "domain": "",
            "domain_auth_secret_arn": "",
            "domain_dns_ips": null,
            "domain_fqdn": "",
            "domain_iam_role_name": "",
            "domain_ou": "",
            "enabled_cloudwatch_logs_exports": null,
            "endpoint": "odoo-postgresql-v2.cna66scsaclz.eu-north-1.rds.amazonaws.com:5432",
            "engine": "postgres",
            "engine_lifecycle_support": "open-source-rds-extended-support",
            "engine_version": "15.7",
            "engine_version_actual": "15.7",
            "final_snapshot_identifier": null,
            "hosted_zone_id": "Z3MPDEQW7KHUGY",
            "iam_database_authentication_enabled": false,
            "id": "db-L3BDTQLNIOSUEGCWANULVU5PSE",
            "identifier": "odoo-postgresql-v2",
            "identifier_prefix": "",
            "instance_class": "db.t3.micro",
            "iops": 0,
            "kms_key_id": "arn:aws:kms:eu-north-1:789121567310:key/3d4851b5-ff49-42c7-9c12-9ab9ea2e8901",
            "latest_restorable_time": "2025-07-10T20:21:45Z",
            "license_model": "postgresql-license",
            "listener_endpoint": [],
            "maintenance_window": "sun:04:00-sun:05:00",
            "manage_master_user_password": null,
            "master_user_secret": [],
            "master_user_secret_kms_key_id": null,
            "max_allocated_storage": 100,
            "monitoring_interval": 0,
            "monitoring_role_arn": "",
            "multi_az": false,
            "nchar_character_set_name": "",
            "network_type": "IPV4",
            "option_group_name": "default:postgres-15",
            "parameter_group_name": "default.postgres15",
            "password": "OdooPassword2024",
            "password_wo": null,
            "password_wo_version": null,
            "performance_insights_enabled": false,
            "performance_insights_kms_key_id": "",
            "performance_insights_retention_period": 0,
            "port": 5432,
            "publicly_accessible": false,
            "region": "eu-north-1",
            "replica_mode": "",
            "replicas": [],
            "replicate_source_db": "",
            "resource_id": "db-L3BDTQLNIOSUEGCWANULVU5PSE",
            "restore_to_point_in_time": [],
            "s3_import": [],
            "skip_final_snapshot": true,
            "snapshot_identifier": null,
            "status": "available",
            "storage_encrypted": true,
            "storage_throughput": 0,
            "storage_type": "gp2",
            "tags": {
              "Name": "Odoo PostgreSQL Database"
            },
            "tags_all": {
              "Name": "Odoo PostgreSQL Database"
            },
            "timeouts": null,
            "timezone": "",
            "upgrade_storage_config": null,
            "username": "odoo",
            "vpc_security_group_ids": [
              "sg-0b857d80f33c51b2f"
            ]
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "password"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "password_wo"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAwLCJkZWxldGUiOjM2MDAwMDAwMDAwMDAsInVwZGF0ZSI6NDgwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMiJ9",
          "dependencies": [
            "aws_db_subnet_group.odoo_db_subnet_group",
            "aws_security_group.odoo_sg",
            "aws_security_group.rds_sg",
            "data.aws_subnets.default",
            "data.aws_vpc.default"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_db_subnet_group",
      "name": "odoo_db_subnet_group",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:rds:eu-north-1:789121567310:subgrp:odoo-db-subnet-group",
            "description": "Managed by Terraform",
            "id": "odoo-db-subnet-group",
            "name": "odoo-db-subnet-group",
            "name_prefix": "",
            "region": "eu-north-1",
            "subnet_ids": [
              "subnet-0070c63743fe10d8c",
              "subnet-06e044cbd63de784d",
              "subnet-09fb960f8242184e5"
            ],
            "supported_network_types": [
              "IPV4"
            ],
            "tags": {
              "Name": "Odoo DB subnet group"
            },
            "tags_all": {
              "Name": "Odoo DB subnet group"
            },
            "vpc_id": "vpc-0be745570590b0710"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_subnets.default",
            "data.aws_vpc.default"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "odoo_web_server",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "ami": "ami-03b371d239dfe4af4",
            "arn": "arn:aws:ec2:eu-north-1:789121567310:instance/i-056f718880d2e4370",
            "associate_public_ip_address": true,
            "availability_zone": "eu-north-1a",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_options": [
              {
                "amd_sev_snp": "",
                "core_count": 1,
                "threads_per_core": 2
              }
            ],
            "credit_specification": [
              {
                "cpu_credits": "unlimited"
              }
            ],
            "disable_api_stop": false,
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enable_primary_ipv6": null,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": "",
            "host_resource_group_arn": null,
            "iam_instance_profile": "",
            "id": "i-056f718880d2e4370",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_lifecycle": "",
            "instance_market_options": [],
            "instance_state": "running",
            "instance_type": "t3.small",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "hurimoney-key",
            "launch_template": [],
            "maintenance_options": [
              {
                "auto_recovery": "default"
              }
            ],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_protocol_ipv6": "disabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "optional",
                "instance_metadata_tags": "disabled"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "placement_partition_number": 0,
            "primary_network_interface_id": "eni-0962440e3fdb8b925",
            "private_dns": "ip-172-31-23-91.eu-north-1.compute.internal",
            "private_dns_name_options": [
              {
                "enable_resource_name_dns_a_record": false,
                "enable_resource_name_dns_aaaa_record": false,
                "hostname_type": "ip-name"
              }
            ],
            "private_ip": "172.31.23.91",
            "public_dns": "ec2-13-51-48-109.eu-north-1.compute.amazonaws.com",
            "public_ip": "13.51.48.109",
            "region": "eu-north-1",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/sda1",
                "encrypted": false,
                "iops": 100,
                "kms_key_id": "",
                "tags": {},
                "tags_all": {},
                "throughput": 0,
                "volume_id": "vol-097c88d4695c82e9f",
                "volume_size": 8,
                "volume_type": "gp2"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [
              "odoo-web-sg"
            ],
            "source_dest_check": true,
            "spot_instance_request_id": "",
            "subnet_id": "subnet-06e044cbd63de784d",
            "tags": {
              "Name": "Odoo Web Server"
            },
            "tags_all": {
              "Name": "Odoo Web Server"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": "#!/bin/bash\n\n# Installation Odoo suivant la documentation officielle\n# https://www.odoo.com/documentation/18.0/administration/install/install.html#linux\n\nset -e\n\necho \"🚀 Installation d'Odoo 18.0 suivant la documentation officielle...\"\n\n# Update system\necho \"📦 Mise à jour du système...\"\napt-get update -y\napt-get upgrade -y\n\n# Install PostgreSQL client (for RDS connection)\necho \"🐘 Installation du client PostgreSQL...\"\napt-get install -y postgresql-client-14\n\n# Add Odoo repository and key - Following official documentation\necho \"🔑 Ajout de la clé de dépôt Odoo...\"\nwget -q -O - https://nightly.odoo.com/odoo.key | gpg --dearmor -o /usr/share/keyrings/odoo-archive-keyring.gpg\n\necho \"📦 Ajout du dépôt Odoo...\"\necho 'deb [signed-by=/usr/share/keyrings/odoo-archive-keyring.gpg] https://nightly.odoo.com/18.0/nightly/deb/ ./' | tee /etc/apt/sources.list.d/odoo.list\n\n# Update package list\necho \"🔄 Mise à jour de la liste des paquets...\"\napt-get update\n\n# Install Odoo - Official way\necho \"📦 Installation d'Odoo...\"\napt-get install -y odoo\n\n# Stop Odoo service (we'll configure it first)\necho \"⏸️ Arrêt du service Odoo pour configuration...\"\nsystemctl stop odoo\nsystemctl disable odoo\n\n# Create directories for custom modules\necho \"📁 Création des répertoires pour les modules personnalisés...\"\nmkdir -p /mnt/extra-addons\nchown odoo:odoo /mnt/extra-addons\n\n# Wait for RDS to be available (will be configured later)\necho \"⏳ Attente de la disponibilité RDS...\"\n\n# Create deployment script for custom module\necho \"🚀 Création du script de déploiement...\"\ncat \u003e /opt/deploy_module.sh \u003c\u003c 'SCRIPT_EOF'\n#!/bin/bash\nset -e\n\nMODULE_NAME=\"hurimoney_concessionnaires\"\nMODULE_PATH=\"/mnt/extra-addons/$MODULE_NAME\"\nREPO_URL=\"https://github.com/adinaninacerdine/hurimoney_concessionnaires.git\"\nBRANCH=\"main\"\n\necho \"🚀 Déploiement du module $MODULE_NAME...\"\n\n# Stop Odoo\necho \"📋 Arrêt d'Odoo...\"\nsystemctl stop odoo\n\n# Backup existing module\nif [ -d \"$MODULE_PATH\" ]; then\n    echo \"💾 Backup de l'ancien module...\"\n    mv \"$MODULE_PATH\" \"${MODULE_PATH}.backup.$(date +%Y%m%d_%H%M%S)\"\nfi\n\n# Clone module\necho \"📥 Téléchargement du module...\"\ngit clone -b $BRANCH $REPO_URL $MODULE_PATH\nchown -R odoo:odoo $MODULE_PATH\n\n# Start Odoo\necho \"🔄 Redémarrage d'Odoo...\"\nsystemctl start odoo\n\nsleep 10\necho \"✅ Déploiement terminé!\"\nSCRIPT_EOF\n\nchmod +x /opt/deploy_module.sh\n\n# Create webhook script\necho \"🔗 Création du webhook...\"\ncat \u003e /opt/webhook.py \u003c\u003c 'WEBHOOK_EOF'\n#!/usr/bin/env python3\nimport json\nimport subprocess\nimport os\nfrom http.server import HTTPServer, BaseHTTPRequestHandler\nimport logging\n\nlogging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')\nlogger = logging.getLogger(__name__)\n\nclass WebhookHandler(BaseHTTPRequestHandler):\n    def do_POST(self):\n        if self.path == '/deploy':\n            content_length = int(self.headers.get('Content-Length', 0))\n            if content_length \u003e 0:\n                post_data = self.rfile.read(content_length)\n                \n                try:\n                    payload = json.loads(post_data.decode('utf-8'))\n                    logger.info(f\"Received webhook payload: {payload.get('ref', 'unknown ref')}\")\n                    \n                    if payload.get('ref') == 'refs/heads/main':\n                        logger.info(\"Starting deployment...\")\n                        result = subprocess.run(['/opt/deploy_module.sh'], \n                                              capture_output=True, text=True, timeout=300)\n                        \n                        if result.returncode == 0:\n                            logger.info(\"Deployment successful\")\n                            self.send_response(200)\n                            self.send_header('Content-type', 'application/json')\n                            self.end_headers()\n                            self.wfile.write(b'{\"status\": \"success\", \"message\": \"Deployment completed\"}')\n                        else:\n                            logger.error(f\"Deployment failed: {result.stderr}\")\n                            self.send_response(500)\n                            self.send_header('Content-type', 'application/json')\n                            self.end_headers()\n                            self.wfile.write(f'{{\"status\": \"error\", \"message\": \"Deployment failed: {result.stderr}\"}}'.encode())\n                    else:\n                        logger.info(f\"Ignoring push to {payload.get('ref', 'unknown')}\")\n                        self.send_response(200)\n                        self.send_header('Content-type', 'application/json')\n                        self.end_headers()\n                        self.wfile.write(b'{\"status\": \"ignored\", \"message\": \"Not a push to main branch\"}')\n                        \n                except Exception as e:\n                    logger.error(f\"Error: {e}\")\n                    self.send_response(500)\n                    self.send_header('Content-type', 'application/json')\n                    self.end_headers()\n                    self.wfile.write(f'{{\"error\": \"Internal server error: {str(e)}\"}}'.encode())\n            else:\n                self.send_response(400)\n                self.send_header('Content-type', 'application/json')\n                self.end_headers()\n                self.wfile.write(b'{\"error\": \"No content\"}')\n        else:\n            self.send_response(404)\n            self.end_headers()\n    \n    def do_GET(self):\n        if self.path == '/':\n            self.send_response(200)\n            self.send_header('Content-type', 'application/json')\n            self.end_headers()\n            self.wfile.write(b'{\"status\": \"Webhook server running\", \"endpoint\": \"/deploy\"}')\n        else:\n            self.send_response(404)\n            self.end_headers()\n\nif __name__ == '__main__':\n    server = HTTPServer(('0.0.0.0', 9000), WebhookHandler)\n    logger.info(\"Starting webhook server on port 9000...\")\n    try:\n        server.serve_forever()\n    except KeyboardInterrupt:\n        logger.info(\"Shutting down webhook server...\")\n        server.shutdown()\nWEBHOOK_EOF\n\nchmod +x /opt/webhook.py\n\n# Create webhook service\ntee /etc/systemd/system/odoo-webhook.service \u003e /dev/null \u003c\u003cEOF\n[Unit]\nDescription=Odoo Webhook Service\nAfter=network.target\n\n[Service]\nType=simple\nUser=root\nExecStart=/usr/bin/python3 /opt/webhook.py\nRestart=always\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\n# Install git for module deployment\necho \"📦 Installation de git...\"\napt-get install -y git\n\n# Start webhook service\necho \"🔄 Démarrage du service webhook...\"\nsystemctl daemon-reload\nsystemctl enable odoo-webhook.service\nsystemctl start odoo-webhook.service\n\necho \"\"\necho \"🎉 Installation d'Odoo terminée!\"\necho \"📋 Configuration manuelle requise pour la base de données RDS\"\necho \"📋 Fichier de configuration: /etc/odoo/odoo.conf\"\necho \"📋 Modules personnalisés: /mnt/extra-addons\"\necho \"🔄 Webhook: http://$(curl -s ifconfig.me 2\u003e/dev/null):9000/deploy\"\necho \"\"\necho \"⚙️ Prochaines étapes:\"\necho \"1. Configurer /etc/odoo/odoo.conf avec les paramètres RDS\"\necho \"2. Démarrer le service: systemctl start odoo\"\necho \"3. Accéder à Odoo: http://$(curl -s ifconfig.me 2\u003e/dev/null):8069\"",
            "user_data_base64": null,
            "user_data_replace_on_change": false,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-0c6930c7fa75758cb"
            ]
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwicmVhZCI6OTAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMiJ9",
          "dependencies": [
            "aws_db_instance.odoo_db",
            "aws_db_subnet_group.odoo_db_subnet_group",
            "aws_security_group.odoo_sg",
            "aws_security_group.rds_sg",
            "data.aws_ami.ubuntu",
            "data.aws_subnets.default",
            "data.aws_vpc.default"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group",
      "name": "odoo_sg",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:eu-north-1:789121567310:security-group/sg-0c6930c7fa75758cb",
            "description": "Security group for Odoo web server",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-0c6930c7fa75758cb",
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 22,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 22
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 8069,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 8069
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 9000,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 9000
              }
            ],
            "name": "odoo-web-sg",
            "name_prefix": "",
            "owner_id": "789121567310",
            "region": "eu-north-1",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "Odoo Web Security Group"
            },
            "tags_all": {
              "Name": "Odoo Web Security Group"
            },
            "timeouts": null,
            "vpc_id": "vpc-0be745570590b0710"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "data.aws_vpc.default"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group",
      "name": "rds_sg",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:eu-north-1:789121567310:security-group/sg-0b857d80f33c51b2f",
            "description": "Security group for RDS PostgreSQL",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-0b857d80f33c51b2f",
            "ingress": [
              {
                "cidr_blocks": [],
                "description": "",
                "from_port": 5432,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0c6930c7fa75758cb"
                ],
                "self": false,
                "to_port": 5432
              }
            ],
            "name": "odoo-rds-sg",
            "name_prefix": "",
            "owner_id": "789121567310",
            "region": "eu-north-1",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "Odoo RDS Security Group"
            },
            "tags_all": {
              "Name": "Odoo RDS Security Group"
            },
            "timeouts": null,
            "vpc_id": "vpc-0be745570590b0710"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "aws_security_group.odoo_sg",
            "data.aws_vpc.default"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
