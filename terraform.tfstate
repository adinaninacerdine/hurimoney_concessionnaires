{
  "version": 4,
  "terraform_version": "1.12.2",
  "serial": 18,
  "lineage": "79ca8d21-5a0b-6d47-7889-18f46e1d392f",
  "outputs": {
    "odoo_server_ip": {
      "value": "51.20.105.232",
      "type": "string"
    },
    "odoo_url": {
      "value": "http://51.20.105.232:8069",
      "type": "string"
    },
    "ssh_command": {
      "value": "ssh -i ~/.ssh/hurimoney-key.pem ubuntu@51.20.105.232",
      "type": "string"
    },
    "webhook_url": {
      "value": "http://51.20.105.232:9000/deploy",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "aws_ami",
      "name": "ubuntu",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allow_unsafe_filter": null,
            "architecture": "x86_64",
            "arn": "arn:aws:ec2:eu-north-1::image/ami-03b371d239dfe4af4",
            "block_device_mappings": [
              {
                "device_name": "/dev/sda1",
                "ebs": {
                  "delete_on_termination": "true",
                  "encrypted": "false",
                  "iops": "0",
                  "snapshot_id": "snap-05cfc6cdf88c0f45c",
                  "throughput": "0",
                  "volume_initialization_rate": "0",
                  "volume_size": "8",
                  "volume_type": "gp2"
                },
                "no_device": "",
                "virtual_name": ""
              },
              {
                "device_name": "/dev/sdb",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral0"
              },
              {
                "device_name": "/dev/sdc",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral1"
              }
            ],
            "boot_mode": "uefi-preferred",
            "creation_date": "2025-06-27T06:44:45.000Z",
            "deprecation_time": "2027-06-27T06:44:45.000Z",
            "description": "Canonical, Ubuntu, 22.04, amd64 jammy image",
            "ena_support": true,
            "executable_users": null,
            "filter": [
              {
                "name": "name",
                "values": [
                  "ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-*"
                ]
              },
              {
                "name": "virtualization-type",
                "values": [
                  "hvm"
                ]
              }
            ],
            "hypervisor": "xen",
            "id": "ami-03b371d239dfe4af4",
            "image_id": "ami-03b371d239dfe4af4",
            "image_location": "amazon/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20250627",
            "image_owner_alias": "amazon",
            "image_type": "machine",
            "imds_support": "",
            "include_deprecated": false,
            "kernel_id": "",
            "last_launched_time": "",
            "most_recent": true,
            "name": "ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20250627",
            "name_regex": null,
            "owner_id": "099720109477",
            "owners": [
              "099720109477"
            ],
            "platform": "",
            "platform_details": "Linux/UNIX",
            "product_codes": [],
            "public": true,
            "ramdisk_id": "",
            "region": "eu-north-1",
            "root_device_name": "/dev/sda1",
            "root_device_type": "ebs",
            "root_snapshot_id": "snap-05cfc6cdf88c0f45c",
            "sriov_net_support": "simple",
            "state": "available",
            "state_reason": {
              "code": "UNSET",
              "message": "UNSET"
            },
            "tags": {},
            "timeouts": null,
            "tpm_support": "",
            "uefi_data": null,
            "usage_operation": "RunInstances",
            "virtualization_type": "hvm"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "odoo_server",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "ami": "ami-03b371d239dfe4af4",
            "arn": "arn:aws:ec2:eu-north-1:789121567310:instance/i-0b7cfbc35c9781fa5",
            "associate_public_ip_address": true,
            "availability_zone": "eu-north-1a",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_options": [
              {
                "amd_sev_snp": "",
                "core_count": 1,
                "threads_per_core": 2
              }
            ],
            "credit_specification": [
              {
                "cpu_credits": "unlimited"
              }
            ],
            "disable_api_stop": false,
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enable_primary_ipv6": null,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": "",
            "host_resource_group_arn": null,
            "iam_instance_profile": "",
            "id": "i-0b7cfbc35c9781fa5",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_lifecycle": "",
            "instance_market_options": [],
            "instance_state": "running",
            "instance_type": "t3.small",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "hurimoney-key",
            "launch_template": [],
            "maintenance_options": [
              {
                "auto_recovery": "default"
              }
            ],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_protocol_ipv6": "disabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "optional",
                "instance_metadata_tags": "disabled"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "placement_partition_number": 0,
            "primary_network_interface_id": "eni-03b0eddd42b06a53e",
            "private_dns": "ip-172-31-30-64.eu-north-1.compute.internal",
            "private_dns_name_options": [
              {
                "enable_resource_name_dns_a_record": false,
                "enable_resource_name_dns_aaaa_record": false,
                "hostname_type": "ip-name"
              }
            ],
            "private_ip": "172.31.30.64",
            "public_dns": "ec2-51-20-105-232.eu-north-1.compute.amazonaws.com",
            "public_ip": "51.20.105.232",
            "region": "eu-north-1",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/sda1",
                "encrypted": false,
                "iops": 100,
                "kms_key_id": "",
                "tags": {},
                "tags_all": {},
                "throughput": 0,
                "volume_id": "vol-021415343d374967f",
                "volume_size": 8,
                "volume_type": "gp2"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [
              "odoo_sg"
            ],
            "source_dest_check": true,
            "spot_instance_request_id": "",
            "subnet_id": "subnet-06e044cbd63de784d",
            "tags": {
              "Name": "Odoo Server"
            },
            "tags_all": {
              "Name": "Odoo Server"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": "#!/bin/bash\n\n# Exit on any error\nset -e\n\n# Update and install dependencies\napt-get update\napt-get upgrade -y\n\n# Install system dependencies for Odoo + pandas\napt-get install -y \\\n    git \\\n    python3-pip \\\n    python3-dev \\\n    python3-venv \\\n    python3-wheel \\\n    python3-setuptools \\\n    build-essential \\\n    wget \\\n    curl \\\n    libxslt-dev \\\n    libzip-dev \\\n    libldap2-dev \\\n    libsasl2-dev \\\n    node-less \\\n    libjpeg-dev \\\n    libpq-dev \\\n    libffi-dev \\\n    pkg-config \\\n    gfortran \\\n    libopenblas-dev \\\n    liblapack-dev \\\n    libblas-dev \\\n    libatlas-base-dev \\\n    python3-numpy \\\n    python3-scipy\n\n# Install wkhtmltopdf dependencies first\napt-get install -y xfonts-base xfonts-75dpi fontconfig\n\n# Install wkhtmltopdf for Ubuntu 22.04\nwget https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6.1-3/wkhtmltox_0.12.6.1-3.jammy_amd64.deb\ndpkg -i wkhtmltox_0.12.6.1-3.jammy_amd64.deb || apt-get -f install -y\napt-get -f install -y\n\n# Install PostgreSQL\napt-get install -y postgresql\nsu - postgres -c \"createuser -s odoo\"\n\n# Create Odoo user\nuseradd -m -d /opt/odoo -U -r -s /bin/bash odoo\n\n# Install Odoo\nsu - odoo -c \"git clone https://www.github.com/odoo/odoo --depth 1 --branch 18.0 /opt/odoo/odoo\"\nsu - odoo -c \"python3 -m venv /opt/odoo/venv\"\n\n# Upgrade pip and install wheel first\n/opt/odoo/venv/bin/pip install --upgrade pip setuptools wheel\n\n# Install numpy and scipy first (pandas dependencies)\n/opt/odoo/venv/bin/pip install numpy scipy\n\n# Install Odoo requirements\n/opt/odoo/venv/bin/pip install -r /opt/odoo/odoo/requirements.txt\n\n# Install pandas separately with no-deps to avoid conflicts\n/opt/odoo/venv/bin/pip install pandas --no-deps\n\n# Create custom addons folder\nsu - odoo -c \"mkdir -p /opt/odoo/extra-addons\"\n\n# Create deployment script for module updates\ncat \u003c\u003c'EOF' \u003e /opt/odoo/deploy_module.sh\n#!/bin/bash\n# Script de déploiement/mise à jour des modules Odoo\n\nMODULE_NAME=\"hurimoney_concessionnaires\"\nMODULE_PATH=\"/opt/odoo/extra-addons/$MODULE_NAME\"\nREPO_URL=\"${REPO_URL:-https://github.com/username/repo.git}\"\nBRANCH=\"${BRANCH:-main}\"\n\necho \"🚀 Déploiement du module $MODULE_NAME...\"\n\n# Arrêter Odoo\necho \"📋 Arrêt d'Odoo...\"\nsystemctl stop odoo.service\n\n# Backup du module existant\nif [ -d \"$MODULE_PATH\" ]; then\n    echo \"💾 Backup de l'ancien module...\"\n    mv \"$MODULE_PATH\" \"${MODULE_PATH}.backup.$(date +%Y%m%d_%H%M%S)\"\nfi\n\n# Cloner/mettre à jour le module\necho \"📥 Téléchargement du module...\"\nif [ -n \"$GITHUB_TOKEN\" ]; then\n    # Avec token GitHub\n    git clone -b $BRANCH https://$GITHUB_TOKEN@github.com/username/repo.git $MODULE_PATH\nelse\n    # Repository public\n    git clone -b $BRANCH $REPO_URL $MODULE_PATH\nfi\n\n# Changer les permissions\nchown -R odoo:odoo $MODULE_PATH\n\n# Redémarrer Odoo\necho \"🔄 Redémarrage d'Odoo...\"\nsystemctl start odoo.service\n\n# Attendre que le service soit prêt\nsleep 10\n\n# Mettre à jour le module via l'API\necho \"🔄 Mise à jour du module...\"\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"jsonrpc\": \"2.0\",\n    \"method\": \"call\",\n    \"params\": {\n      \"service\": \"object\",\n      \"method\": \"execute\",\n      \"args\": [\"odoo_db\", 1, \"admin\", \"ir.module.module\", \"upgrade\", []]\n    },\n    \"id\": 1\n  }' \\\n  http://localhost:8069/jsonrpc || echo \"⚠️ Mise à jour manuelle nécessaire\"\n\necho \"✅ Déploiement terminé!\"\nEOF\n\nchmod +x /opt/odoo/deploy_module.sh\n\n# Créer un webhook endpoint pour GitHub\ncat \u003c\u003c'EOF' \u003e /opt/odoo/webhook.py\n#!/usr/bin/env python3\nimport json\nimport subprocess\nimport os\nfrom http.server import HTTPServer, BaseHTTPRequestHandler\n\nclass WebhookHandler(BaseHTTPRequestHandler):\n    def do_POST(self):\n        if self.path == '/deploy':\n            content_length = int(self.headers['Content-Length'])\n            post_data = self.rfile.read(content_length)\n            \n            try:\n                payload = json.loads(post_data.decode('utf-8'))\n                \n                # Vérifier que c'est un push sur main\n                if payload.get('ref') == 'refs/heads/main':\n                    # Déclencher le déploiement\n                    subprocess.run(['/opt/odoo/deploy_module.sh'], check=True)\n                    \n                    self.send_response(200)\n                    self.send_header('Content-type', 'application/json')\n                    self.end_headers()\n                    self.wfile.write(b'{\"status\": \"success\"}')\n                else:\n                    self.send_response(200)\n                    self.send_header('Content-type', 'application/json')\n                    self.end_headers()\n                    self.wfile.write(b'{\"status\": \"ignored\"}')\n                    \n            except Exception as e:\n                self.send_response(500)\n                self.send_header('Content-type', 'application/json')\n                self.end_headers()\n                self.wfile.write(f'{{\"error\": \"{str(e)}\"}}'.encode())\n        else:\n            self.send_response(404)\n            self.end_headers()\n\nif __name__ == '__main__':\n    server = HTTPServer(('0.0.0.0', 9000), WebhookHandler)\n    server.serve_forever()\nEOF\n\nchmod +x /opt/odoo/webhook.py\n\n# Créer service systemd pour le webhook\ncat \u003c\u003cEOF \u003e /etc/systemd/system/odoo-webhook.service\n[Unit]\nDescription=Odoo Webhook Service\nAfter=network.target\n\n[Service]\nType=simple\nUser=odoo\nExecStart=/usr/bin/python3 /opt/odoo/webhook.py\nRestart=always\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\n# Déploiement initial du module\nexport REPO_URL=\"https://github.com/adinaninacerdine/hurimoney_concessionnaires.git\"\nexport BRANCH=\"main\"\n/opt/odoo/deploy_module.sh\n\n# Create Odoo config file\ncat \u003c\u003cEOF \u003e /etc/odoo.conf\n[options]\n; This is the password that allows database operations:\nadmin_passwd = admin\ndb_host = False\ndb_port = False\ndb_user = odoo\ndb_password = False\naddons_path = /opt/odoo/odoo/addons,/opt/odoo/extra-addons\nEOF\n\n# Create systemd service file\ncat \u003c\u003cEOF \u003e /etc/systemd/system/odoo.service\n[Unit]\nDescription=Odoo\n\n[Service]\nType=simple\nUser=odoo\nExecStart=/opt/odoo/venv/bin/python3 /opt/odoo/odoo/odoo-bin -c /etc/odoo.conf\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\n# Start services\nsystemctl daemon-reload\nsystemctl enable --now odoo.service\nsystemctl enable --now odoo-webhook.service\n\necho \"🎉 Installation terminée!\"\necho \"📋 Odoo: http://$(curl -s ifconfig.me):8069\"\necho \"🔄 Webhook: http://$(curl -s ifconfig.me):9000/deploy\"\necho \"⚙️ Pour déployer manuellement: /opt/odoo/deploy_module.sh\"\n",
            "user_data_base64": null,
            "user_data_replace_on_change": false,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-09f445e078e536824"
            ]
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwicmVhZCI6OTAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMiJ9",
          "dependencies": [
            "aws_security_group.odoo_sg",
            "data.aws_ami.ubuntu"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group",
      "name": "odoo_sg",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:eu-north-1:789121567310:security-group/sg-09f445e078e536824",
            "description": "Allow Odoo and SSH traffic",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-09f445e078e536824",
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 22,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 22
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 8069,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 8069
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 9000,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 9000
              }
            ],
            "name": "odoo_sg",
            "name_prefix": "",
            "owner_id": "789121567310",
            "region": "eu-north-1",
            "revoke_rules_on_delete": false,
            "tags": null,
            "tags_all": {},
            "timeouts": null,
            "vpc_id": "vpc-0be745570590b0710"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    }
  ],
  "check_results": null
}
