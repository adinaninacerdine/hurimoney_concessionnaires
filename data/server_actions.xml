<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data noupdate="1">
        <!-- Action serveur : Envoyer SMS de bienvenue -->
        <record id="action_send_welcome_sms" model="ir.actions.server">
            <field name="name">Envoyer SMS de bienvenue</field>
            <field name="model_id" ref="model_hurimoney_concessionnaire"/>
            <field name="binding_model_id" ref="model_hurimoney_concessionnaire"/>
            <field name="state">code</field>
            <field name="code">
if records:
    for record in records:
        if record.state == 'active' and record.phone:
            # Intégration avec un service SMS
            message = f"Bienvenue {record.name} chez HuriMoney! Votre code est {record.code}. Support: 269 123 456"
            # env['sms.api'].send_sms(record.phone, message)
            record.message_post(body=f"SMS de bienvenue envoyé à {record.phone}")
            </field>
        </record>
        
        <!-- Action serveur : Alerte performance faible -->
        <record id="action_alert_low_performance" model="ir.actions.server">
            <field name="name">Alerter performance faible</field>
            <field name="model_id" ref="model_hurimoney_concessionnaire"/>
            <field name="state">code</field>
            <field name="code">
low_performers = env['hurimoney.concessionnaire'].search([
    ('state', '=', 'active'),
    ('performance_score', '<', 30)
])

for conc in low_performers:
    # Créer une activité pour l'agent
    if conc.agent_id:
        conc.activity_schedule(
            'mail.mail_activity_data_todo',
            user_id=conc.agent_id.id,
            summary=f"Performance faible: {conc.name}",
            note=f"Le concessionnaire {conc.name} a un score de {conc.performance_score}%. Veuillez le contacter."
        )
            </field>
        </record>
        
        <!-- Règle automatique : Suspension automatique -->
        <record id="rule_auto_suspend" model="base.automation">
            <field name="name">Suspension automatique inactivité</field>
            <field name="model_id" ref="model_hurimoney_concessionnaire"/>
            <field name="trigger">on_time</field>
            <field name="trg_date_id" ref="model_hurimoney_concessionnaire_field_last_activity_date"/>
            <field name="trg_date_range">30</field>
            <field name="trg_date_range_type">day</field>
            <field name="filter_domain">[('state', '=', 'active')]</field>
            <field name="state">code</field>
            <field name="code">
records.write({
    'state': 'suspended',
    'suspension_date': fields.Date.today(),
})
for record in records:
    record.message_post(
        body="Concessionnaire suspendu automatiquement pour inactivité de plus de 30 jours",
        message_type='notification'
    )
            </field>
        </record>
    </data>
</odoo>